// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.springsource.roo.testprint.domain;

import java.util.List;
import java.util.Random;

import org.springframework.stereotype.Component;

privileged aspect DosaDataOnDemand_Roo_DataOnDemand {
    
    declare @type: DosaDataOnDemand: @Component;
    
    private Random DosaDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Dosa> DosaDataOnDemand.data;
    
    public Dosa DosaDataOnDemand.getNewTransientDosa(int index) {
        com.springsource.roo.testprint.domain.Dosa obj = new com.springsource.roo.testprint.domain.Dosa();
        obj.setName("name_" + index);
        obj.setPrice(new Integer(index).floatValue());
        return obj;
    }
    
    public Dosa DosaDataOnDemand.getSpecificDosa(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Dosa obj = data.get(index);
        return Dosa.findDosa(obj.getId());
    }
    
    public Dosa DosaDataOnDemand.getRandomDosa() {
        init();
        Dosa obj = data.get(rnd.nextInt(data.size()));
        return Dosa.findDosa(obj.getId());
    }
    
    public boolean DosaDataOnDemand.modifyDosa(Dosa obj) {
        return false;
    }
    
    public void DosaDataOnDemand.init() {
        data = com.springsource.roo.testprint.domain.Dosa.findDosaEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Dosa' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.springsource.roo.testprint.domain.Dosa>();
        for (int i = 0; i < 10; i++) {
            com.springsource.roo.testprint.domain.Dosa obj = getNewTransientDosa(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
